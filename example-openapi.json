openapi: 3.0.3
info:
  title: Sample API Documentation
  description: An example API for managing users, businesses, and payment links.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
security:
  - api_key: []
components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
        name:
          type: string
          description: Name of the user.
        email:
          type: string
          description: Email of the user.
        role:
          type: string
          description: Role of the user (e.g., admin, customer).
    Business:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the business.
        name:
          type: string
          description: Name of the business.
        address:
          type: string
          description: Physical address of the business.
        contact_email:
          type: string
          description: Contact email of the business.
    PaymentLink:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the payment link.
        amount:
          type: number
          description: Amount for the payment.
        currency:
          type: string
          description: Currency for the payment.
        description:
          type: string
          description: Description of the payment purpose.
paths:
  /users:
    get:
      summary: Get a list of users
      security:
        - api_key: []
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get details of a specific user
      security:
        - api_key: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the user.
      responses:
        '200':
          description: User details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a specific user
      security:
        - api_key: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a specific user
      security:
        - api_key: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully.

  /businesses:
    get:
      summary: Get a list of businesses
      security:
        - api_key: []
      responses:
        '200':
          description: A list of businesses.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
    post:
      summary: Create a new business
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
      responses:
        '201':
          description: Business created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'

  /paymentlinks:
    get:
      summary: Get a list of payment links
      security:
        - api_key: []
      responses:
        '200':
          description: A list of payment links.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentLink'
    post:
      summary: Create a new payment link
      security:
        - api_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentLink'
      responses:
        '201':
          description: Payment link created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLink'

  /paymentlinks/{linkId}:
    get:
      summary: Get details of a specific payment link
      security:
        - api_key: []
      parameters:
        - name: linkId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the payment link.
      responses:
        '200':
          description: Payment link details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLink'
    put:
      summary: Update a specific payment link
      security:
        - api_key: []
      parameters:
        - name: linkId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentLink'
      responses:
        '200':
          description: Payment link updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLink'
    delete:
      summary: Delete a specific payment link
      security:
        - api_key: []
      parameters:
        - name: linkId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Payment link deleted successfully.
